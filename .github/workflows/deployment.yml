name: Deployment-Workflow
on:
  workflow_dispatch:

env:
  ROLE_NAME : ${{secrets.ROLE_NAME}}
permissions:
  id-token: write  
  contents: read
jobs:
  BUILD_TEST:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repo
      uses: actions/checkout@main
    - name: Setup Python 
      uses: actions/setup-python@v5
      with:
        python-version: 3.10
    - name: Install Dependencies
      run: |
            cd ./application
            python -m pip install --upgrade pip
            pip -r install requirements.txt
    - name: Run Test
      run: |
           cd ./application
           pip install pytest pytest-cov
           pytest test_app.py


  Docker_Push:
    needs: BUILD_TEST
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repo
      uses: actions/checkout@main
    - name: Docker login
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
    - name: Docker Build Image Node
      run: |
           cd ./application
           docker build -t python-app .
           docker tag python-app:latest suryansh1234/my-repo:python-app
           docker push suryansh1234/my-repo:python-app
  deployment:
    needs: Docker_Push
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repo
      uses: actions/checkout@main
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{secrets.ROLE_NAME}} 
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: us-east-1
    - name: Install kubectl CLI
      uses: azure/setup-kubectl@v3
      with:
        version: v1.26.0
    - name: Check kubernetes version
      run: |
          aws eks update-kubeconfig --name my-cluster
          kubectl get nodes
    - name: Get Ingress IP
      run: |
         echo "INGRESS_IP=$(kubectl -n ingress-nginx get service ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0]}")" >> $GITHUB_ENV 
    - name: Deploy
      env:
        INGRESS_IP: ${{env.INGRESS_IP}}
        CERTIFICATE_ARN: ${{secrets.CERTIFICATE_ARN}}
      run: |
          kubectl apply -f kubernetes/deployment.yml
          kubectl apply -f kubernetes/ingress.yml
          kubectl apply -f kubernetes/service.yml

